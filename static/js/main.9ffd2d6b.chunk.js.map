{"version":3,"sources":["assets/images/loader.svg","shared/Main/index.js","shared/Header/index.js","shared/Footer/index.js","Components/common/Loader/index.js","utils/index.js","actions/fetchActions/index.js","constants/constants.js","Services/API/index.js","Components/Profile/index.js","actions/profileActions/index.js","Components/RepoItem/index.js","Components/RepoList/index.js","actions/reposActions/index.js","Components/Tab/index.js","App.js","reducers/repos/index.js","reducers/fetch/index.js","reducers/profile/index.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","Main","props","className","children","Header","href","title","size","Footer","Loader","style","textAlign","src","loader","alt","isObjectEmpty","obj","JSON","stringify","isArrayEmpty","arr","length","getDayMonth","date","moment","format","setFetchStatus","flag","type","payload","API_USER_URL","API_USER_BASE_URL","MAP_LANGAUGES_TO_COLOR","HTML","Python","JavaScript","fetchUrl","url","a","axios","get","response","console","log","connect","state","isFetching","fetch","profile","dispatch","setProfile","value","bio","name","blog","login","email","company","location","followers","following","updated_at","avatar_url","created_at","public_repos","twitter_username","useEffect","getUserInfo","then","data","API","constant","RepoItem","repo","html_url","language","description","forks_count","stargazers_count","target","background","repoList","setRepoList","useState","search","setSearch","filteredRepoList","setFilteredRepoList","getRepoList","filter","toLowerCase","includes","placeholder","onChange","e","map","key","id","TabNav","App","Tab","INITIAL_STATE","repoReducer","action","fetchReducer","profileReducer","reducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9ffd2d6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.236d70a3.svg\";","import React from 'react';\r\n\r\nconst Main = (props) => {\r\n  return <main className={`Main`}>{props.children}</main>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { GoMarkGithub } from 'react-icons/go';\r\n\r\nimport './style.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <a href=\"https://github.com\" title=\"Github Logo\">\r\n        <GoMarkGithub className=\"logo\" size=\"2em\" />\r\n      </a>\r\n      <a href=\"https://github.com\" title=\"Github Logo\">\r\n        <h1 className=\"title\">Github</h1>\r\n      </a>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <span></span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport loader from '../../../assets/images/loader.svg';\nimport './style.css';\n\nconst Loader = (props) => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <img src={loader} alt=\"Loading\" style={props.style}></img>\n    </div>\n  );\n};\n\nexport default Loader;\n","/**\n * utils.js\n * This file contains utilities function\n */\nimport moment from 'moment';\n\nexport function isObjectEmpty(obj) {\n  return JSON.stringify(obj) === '{}';\n}\n\nexport function isArrayEmpty(arr) {\n  return arr.length === 0;\n}\n\nexport function getDayMonth(date) {\n  return moment(date).format('MMMM, Do YYYY');\n}\n","export const SET_FETCH_STATUS = 'SET_FETCH_STATUS';\n\nexport function setFetchStatus(flag) {\n  return {\n    type: SET_FETCH_STATUS,\n    payload: { flag: flag }\n  };\n}\n","export const USER_NAME = 'Bishalsarang';\r\nexport const API_USER_BASE_URL = 'https://api.github.com/users/';\r\nexport const API_USER_URL = API_USER_BASE_URL + USER_NAME;\r\nexport const API_REPO_URL = API_USER_URL + '/repos';\r\n\r\nexport const MAP_LANGAUGES_TO_COLOR = {\r\n  'C++': '#F34B7D',\r\n  HTML: '#E34c26',\r\n  Python: '#3572A5',\r\n  JavaScript: '#F1E05A',\r\n  'Jupyter Notebook': '#DA5B0B'\r\n};\r\n","import * as constants from '../../constants/constants';\r\nimport axios from 'axios';\r\n\r\nconst fetchUrl = async (url) => {\r\n  try {\r\n    const response = await axios.get(url);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst fetchUser = async (userName) => {\r\n  const response = await fetchUrl(`${constants.API_USER_BASE_URL}${userName}`);\r\n  return response;\r\n};\r\n\r\nexport { fetchUrl, fetchUser };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Loader from '../common/Loader';\r\nimport { isObjectEmpty, getDayMonth } from '../../utils';\r\n\r\n// Import Redux Actions\r\nimport { setProfile } from '../../actions/profileActions';\r\nimport { setFetchStatus } from '../../actions/fetchActions';\r\n\r\n// Import Icons\r\nimport { BsBriefcase } from 'react-icons/bs';\r\nimport { RiGitRepositoryLine } from 'react-icons/ri';\r\nimport { FaBloggerB } from 'react-icons/fa';\r\nimport { GrLocation, GrUpdate } from 'react-icons/gr';\r\n\r\nimport * as API from '../../Services/API';\r\nimport * as constant from '../../constants/constants';\r\nimport {} from '../../utils';\r\n\r\nimport './style.css';\r\n\r\nconst Profile = ({ profile, isFetching, setProfile, setFetchStatus }) => {\r\n  const {\r\n    bio,\r\n    name,\r\n    blog,\r\n    login,\r\n    email,\r\n    company,\r\n    location,\r\n    followers,\r\n    following,\r\n    updated_at,\r\n    avatar_url,\r\n    created_at,\r\n    public_repos,\r\n    twitter_username\r\n  } = profile;\r\n\r\n  useEffect(() => {\r\n    if (isObjectEmpty(profile)) {\r\n      console.log('Fetching', profile);\r\n      getUserInfo().then((response) => {\r\n        if (response) {\r\n          setProfile(response.data);\r\n          setFetchStatus(false);\r\n        }\r\n      });\r\n    } else {\r\n      console.log('Already fetched');\r\n    }\r\n  }, [setProfile]);\r\n\r\n  const getUserInfo = async () => {\r\n    setFetchStatus(true);\r\n    const response = await API.fetchUrl(constant.API_USER_URL).then((response) => response);\r\n    return response;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Profile\">\r\n      {isFetching || isObjectEmpty(profile) ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"info\">\r\n          <div className=\"avatar-image-wrapper\">\r\n            <img className=\"avatar-img\" src={avatar_url} alt={`${login} Avatar`}></img>\r\n          </div>\r\n          <h3 className=\"name\">{name}</h3>\r\n          <span className=\"username\">@{login}</span>\r\n          {company && (\r\n            <span className=\"company\">\r\n              <BsBriefcase /> {company}\r\n            </span>\r\n          )}\r\n          {bio && <span className=\"bio\">Bio: {bio}</span>}\r\n          {blog && (\r\n            <span className=\"blog\">\r\n              <a href={blog} title=\"Website\">\r\n                <FaBloggerB /> {blog}\r\n              </a>\r\n            </span>\r\n          )}\r\n          {email && <span className=\"email\">Email: {email}</span>}\r\n          {location && (\r\n            <span className=\"location\">\r\n              <GrLocation />\r\n              {location}\r\n            </span>\r\n          )}\r\n          {followers && <span className=\"followers\">Followers: {followers}</span>}\r\n          {following && <span className=\"following\">Following: {following}</span>}\r\n          {public_repos && (\r\n            <span className=\"public_repos\">\r\n              <RiGitRepositoryLine />\r\n              Repositories {public_repos}\r\n            </span>\r\n          )}\r\n          {updated_at && <span className=\"updated_at\">Updated: {getDayMonth(updated_at)}</span>}\r\n          {created_at && <span className=\"created_at\">Created: {getDayMonth(created_at)}</span>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    isFetching: state.fetch.isFetching,\r\n    profile: state ? state.profile.profile : {}\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setProfile: (value) => dispatch(setProfile(value)),\r\n    setFetchStatus: (flag) => dispatch(setFetchStatus(flag))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","export const SET_PROFILE = 'SET_PROFILE';\n\nexport function setProfile(value) {\n  return {\n    type: SET_PROFILE,\n    payload: { profile: value }\n  };\n}\n","import React from 'react';\nimport { GoRepoForked, GoStar } from 'react-icons/go';\n\nimport { getDayMonth } from '../../utils/index';\nimport { MAP_LANGAUGES_TO_COLOR } from '../../constants/constants';\n\nimport './style.css';\n\nconst RepoItem = (props) => {\n  const { name, html_url, language, created_at, updated_at, description, forks_count, stargazers_count } = props.repo;\n\n  return (\n    <div className=\"RepoItem\">\n      <a href={html_url} title={name} target=\"_blank\">\n        <h3 className=\"title\">{name}</h3>\n      </a>\n      <p className=\"desc\">{description}</p>\n      <div className=\"meta\">\n        <div className=\"language\">\n          <span className=\"indicator\" style={{ background: MAP_LANGAUGES_TO_COLOR[language] }}></span>\n          <span>{language}</span>\n        </div>\n        <span className=\"forks-count\">\n          <GoRepoForked />\n          {forks_count}\n        </span>\n        <span className=\"stargazers_count\">\n          <GoStar />\n          {stargazers_count}\n        </span>\n      </div>\n      <div className=\"dates\">\n        <span className=\"created-at\">Created at: {getDayMonth(created_at)}</span>\n        <span className=\"updated-at\">Updated at: {getDayMonth(updated_at)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoItem;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport RepoItem from '../RepoItem';\nimport Search from '../common/Search';\nimport Loader from '../common/Loader';\nimport { isArrayEmpty } from '../../utils';\nimport * as constant from '../../constants/constants';\n\nimport { setRepoList } from '../../actions/reposActions';\nimport { setFetchStatus } from '../../actions/fetchActions';\n\nimport * as API from '../../Services/API';\n\nimport './style.css';\n\nconst RepoList = ({ repoList, isFetching, setRepoList, setFetchStatus }) => {\n  const [search, setSearch] = useState('');\n  const [filteredRepoList, setFilteredRepoList] = useState([]);\n\n  useEffect(() => {\n    if (isArrayEmpty(repoList)) {\n      getRepoList().then((response) => {\n        if (response) {\n          setRepoList(response.data);\n          setFetchStatus(false);\n        }\n      });\n    } else {\n      console.log('Repository List already fetched');\n    }\n  }, [repoList, setRepoList]);\n\n  useEffect(() => {\n    setFilteredRepoList(repoList.filter((repo) => repo.name.toLowerCase().includes(search.toLowerCase())));\n  }, [repoList, search]);\n\n  const getRepoList = async () => {\n    setFetchStatus(true);\n    const response = await API.fetchUrl(constant.API_REPO_URL).then((response) => response);\n    return response;\n  };\n\n  return (\n    <div className=\"RepoList\">\n      <input\n        className=\"search-input\"\n        type=\"text\"\n        placeholder=\"Find a repository\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      {isFetching ? (\n        <Loader />\n      ) : (\n        !isArrayEmpty(repoList) && (\n          <ul className=\"RepoItemList\">\n            {filteredRepoList.map((repo) => (\n              <RepoItem key={repo.id} repo={repo} />\n            ))}\n          </ul>\n        )\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    repoList: state ? state.repo.repoList : [],\n    isFetching: state.fetch.isFetching\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRepoList: (value) => dispatch(setRepoList(value)),\n    setFetchStatus: (flag) => dispatch(setFetchStatus(flag))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RepoList);\n","export const SET_REPO_LIST = 'SET_REPO_LIST';\n\nexport const setRepoList = (value) => {\n  return {\n    type: SET_REPO_LIST,\n    payload: { repoList: value }\n  };\n};\n","import React from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport { RiGitRepositoryLine } from 'react-icons/ri';\nimport { BsPeople, BsStar, BsPerson } from 'react-icons/bs';\n\nimport Profile from '../Profile';\nimport RepoList from '../RepoList';\n// Import Default Tabs STyle\nimport 'react-tabs/style/react-tabs.css';\n// Override Default Tabs Style\nimport './style.css';\n\nconst TabNav = ({ className }) => {\n  return (\n    <div className={className}>\n      <Tabs>\n        <TabList>\n          <Tab>\n            <div className=\"tab__logo\">\n              <BsPerson />\n            </div>\n\n            <span className=\"tab__name\">Profile</span>\n          </Tab>\n          <Tab>\n            <div className=\"tab__logo\">\n              <RiGitRepositoryLine />\n            </div>\n            <span className=\"tab__name\">Repositories</span>\n          </Tab>\n          <Tab>\n            <div className=\"tab__logo\">\n              <BsPeople />\n            </div>\n            <span className=\"tab__name\">Followers</span>\n          </Tab>\n          <Tab>\n            <div className=\"tab__logo\">\n              <RiGitRepositoryLine />\n            </div>\n            <span className=\"tab__name\">Following</span>\n          </Tab>\n          <Tab>\n            <div className=\"tab__logo\">\n              <BsStar />\n            </div>\n            <span className=\"tab__name\">Stars</span>\n          </Tab>\n        </TabList>\n\n        <TabPanel>\n          <Profile />\n        </TabPanel>\n        <TabPanel>\n          <RepoList />\n        </TabPanel>\n        <TabPanel>\n          <h2>Followers</h2>\n        </TabPanel>\n        <TabPanel>\n          <h2>Followings</h2>\n        </TabPanel>\n        <TabPanel>\n          <h2>Stars</h2>\n        </TabPanel>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default TabNav;\n","import React from 'react';\r\n\r\n// Layout Components\r\nimport Main from './shared/Main';\r\nimport Header from './shared/Header';\r\nimport Footer from './shared/Footer';\r\n\r\nimport './App.css';\r\nimport TabNav from './Components/Tab';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main>\r\n        <TabNav className=\"container\" />\r\n      </Main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { SET_REPO_LIST } from '../../actions/reposActions';\n\nconst INITIAL_STATE = {\n  repoList: []\n};\n\nconst repoReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_REPO_LIST:\n      return { ...state, repoList: action.payload.repoList, isFetching: false };\n    default:\n      return state;\n  }\n};\n\nexport default repoReducer;\n","import { SET_FETCH_STATUS } from '../../actions/fetchActions';\n\nconst INITIAL_STATE = {\n  isFetching: false\n};\n\nconst fetchReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_FETCH_STATUS:\n      return { ...state, isFetching: action.payload.flag };\n\n    default:\n      return state;\n  }\n};\n\nexport default fetchReducer;\n","import { SET_PROFILE } from '../../actions/profileActions';\n\nconst INITIAL_STATE = {\n  profile: {}\n};\n\nconst profileReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_PROFILE:\n      return { ...state, profile: action.payload.profile };\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\n","import { combineReducers } from 'redux';\n\nimport repoReducer from './repos';\nimport fetchReducer from './fetch';\nimport profileReducer from './profile';\n\nconst reducer = combineReducers({\n  repo: repoReducer,\n  profile: profileReducer,\n  fetch: fetchReducer\n});\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\n// Styles\nimport './index.css';\nimport './styles/reset.css';\nimport './styles/layout.css';\nimport './styles/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}