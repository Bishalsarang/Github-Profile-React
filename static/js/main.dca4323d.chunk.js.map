{"version":3,"sources":["assets/images/loader.svg","shared/Main/index.js","shared/Header/index.js","shared/Footer/index.js","Components/common/Loader/index.js","actions/fetchActions/index.js","constants/constants.js","Services/API/index.js","utils/index.js","Components/Profile/index.js","actions/profileActions/index.js","Components/RepoItem/index.js","Components/RepoList/index.js","actions/reposActions/index.js","Components/UserItem/index.js","Components/UsersList/index.js","actions/usersActions/index.js","Components/Tab/index.js","App.js","reducers/repos/index.js","reducers/fetch/index.js","reducers/users/index.js","reducers/profile/index.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","Main","props","className","children","Header","href","title","size","Footer","Loader","style","height","src","loader","alt","setFetchStatus","flag","type","payload","API_USER_URL","API_USER_BASE_URL","API_REPO_URL","API_FOLLOWER_URL","API_FOLLOWING_URL","LANGUAGES","MAP_LANGUAGES_TO_COLOR","HTML","Python","JavaScript","fetchUrl","url","a","axios","get","response","isObjectEmpty","obj","JSON","stringify","isArrayEmpty","arr","length","getDayMonth","date","moment","format","connect","state","isFetching","fetch","profile","dispatch","setProfile","value","bio","name","blog","login","email","company","location","followers","following","updatedAt","updated_at","avatarUrl","avatar_url","createdAt","created_at","publicRepos","public_repos","followersUrl","followers_url","followingUrl","following_url","getUserInfo","API","constant","then","useEffect","data","RepoItem","repo","searchText","language","description","htmlUrl","html_url","forksCount","forks_count","starGazersCount","stargazers_count","target","rel","search","background","repoList","setRepoList","useState","setSearch","setLanguage","filteredRepoList","setFilteredRepoList","getRepoList","filter","toLowerCase","includes","placeholder","onChange","e","id","selectedIndex","text","map","index","key","UserItem","user","setUser","isLoading","setLoading","displayUserInfo","followersList","users","followingList","setFollowersList","setFollowingList","selectedComponent","URL","setList","list","getUsersList","TabNav","App","Tab","INITIAL_STATE","repoReducer","action","fetchReducer","usersReducer","profileReducer","reducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dca4323d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.236d70a3.svg\";","import React from 'react';\n\nconst Main = (props) => {\n  return <main className={`Main`}>{props.children}</main>;\n};\n\nexport default Main;\n","import React from 'react';\nimport { GoMarkGithub } from 'react-icons/go';\n\nimport './style.css';\n\nconst Header = () => (\n  <header className=\"Header\">\n    <a href=\"https://github.com\" title=\"Github Logo\">\n      <GoMarkGithub className=\"logo\" size=\"2em\" />\n    </a>\n    <a href=\"https://github.com\" title=\"Github Logo\">\n      <h1 className=\"title\">Github</h1>\n    </a>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nimport './style.css';\n\nconst Footer = () => {\n  return (\n    <footer className=\"Footer\">\n      <span></span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport loader from '../../../assets/images/loader.svg';\nimport './style.css';\n\nconst Loader = ({ style, height }) => (\n  <div style={style} className=\"Loader\">\n    <img src={loader} alt=\"Loading\" height={height}></img>\n  </div>\n);\n\nexport default Loader;\n","export const SET_FETCH_STATUS = 'SET_FETCH_STATUS';\n\n/**\n * SetFetchStatus: sets the status if data is being fetched.\n *\n * @param {Boolean} flag\n */\nexport function setFetchStatus(flag) {\n  return {\n    type: SET_FETCH_STATUS,\n    payload: { flag },\n  };\n}\n","export const USER_NAME = 'Bishalsarang';\nexport const API_USER_BASE_URL = 'https://api.github.com/users/';\nexport const API_USER_URL = API_USER_BASE_URL + USER_NAME;\nexport const API_REPO_URL = `${API_USER_URL}/repos`;\nexport const API_FOLLOWER_URL = `${API_USER_URL}/followers`;\nexport const API_FOLLOWING_URL = `${API_USER_URL}/following`;\n\nexport const LANGUAGES = ['All', 'C++', 'HTML', 'Python', 'JavaScript', 'Jupyter Notebook'];\nexport const MAP_LANGUAGES_TO_COLOR = {\n  'C++': '#F34B7D',\n  HTML: '#E34c26',\n  Python: '#3572A5',\n  JavaScript: '#F1E05A',\n  'Jupyter Notebook': '#DA5B0B',\n};\n\nexport const SORT_REPO_BY = ['updated', 'created', 'starCounts', 'forkedCounts'];\nexport const ITEMS_PER_PAGE = 10;\n","import axios from 'axios';\nimport * as constants from '../../constants/constants';\n\nconst fetchUrl = async (url) => {\n  try {\n    const response = await axios.get(url);\n\n    return response;\n  } catch (error) {\n    return null;\n  }\n};\n\nconst fetchUser = async (userName) => {\n  const response = await fetchUrl(`${constants.API_USER_BASE_URL}${userName}`);\n\n  return response;\n};\n\nexport { fetchUrl, fetchUser };\n","/**\n * utils.js\n * This file contains utilities function\n */\nimport moment from 'moment';\n\nexport function isObjectEmpty(obj) {\n  return JSON.stringify(obj) === '{}';\n}\n\nexport function isArrayEmpty(arr) {\n  return arr.length === 0;\n}\n\nexport function getDayMonth(date) {\n  return moment(date).format('MMMM, Do YYYY');\n}\n","/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\n// Icons\nimport { FaBloggerB } from 'react-icons/fa';\nimport { GrLocation } from 'react-icons/gr';\nimport { BsBriefcase } from 'react-icons/bs';\nimport { RiGitRepositoryLine } from 'react-icons/ri';\n\n// UI COmponents\nimport Loader from '../common/Loader';\n\n// Import Redux Actions\nimport { setProfile } from '../../actions/profileActions';\nimport { setFetchStatus } from '../../actions/fetchActions';\n\n// Utils, Constants and API\nimport * as API from '../../Services/API';\nimport * as constant from '../../constants/constants';\nimport { isObjectEmpty, getDayMonth } from '../../utils';\n\n// Styles\nimport './style.css';\n\nconst Profile = ({ profile, isFetching, setProfile, setFetchStatus }) => {\n  const {\n    bio,\n    name,\n    blog,\n    login,\n    email,\n    company,\n    location,\n    followers,\n    following,\n    updated_at: updatedAt,\n    avatar_url: avatarUrl,\n    created_at: createdAt,\n    public_repos: publicRepos,\n    followers_url: followersUrl,\n    following_url: followingUrl,\n  } = profile;\n\n  const getUserInfo = async () => {\n    setFetchStatus(true);\n    const response = await API.fetchUrl(constant.API_USER_URL).then((response) => response);\n\n    return response;\n  };\n\n  useEffect(() => {\n    if (isObjectEmpty(profile)) {\n      getUserInfo().then((response) => {\n        if (response) {\n          setProfile(response.data);\n          setFetchStatus(false);\n        }\n      });\n    }\n  }, [setProfile]);\n\n  return (\n    <div className=\"Profile\">\n      {isFetching || isObjectEmpty(profile) ? (\n        <Loader />\n      ) : (\n        <div className=\"info\">\n          <div className=\"avatar-image-wrapper\">\n            <img className=\"avatar-img\" src={avatarUrl} alt={`${login} Avatar`}></img>\n          </div>\n          <h3 className=\"name\">{name}</h3>\n          <span className=\"username\">@{login}</span>\n          {bio && <span className=\"bio\"> {bio}</span>}\n          {company && (\n            <span className=\"company\">\n              <BsBriefcase /> {company}\n            </span>\n          )}\n          {blog && (\n            <span className=\"blog\">\n              <a href={blog} title=\"Website\">\n                <FaBloggerB /> {blog}\n              </a>\n            </span>\n          )}\n          {email && <span className=\"email\">Email: {email}</span>}\n          {location && (\n            <span className=\"location\">\n              <GrLocation />\n              {location}\n            </span>\n          )}\n          {\n            <a href={followersUrl} title={`${login} followers`}>\n              <span className=\"followers\">Followers: {followers}</span>\n            </a>\n          }\n          {\n            <a href={followingUrl} title={`${login} following`}>\n              <span className=\"following\">Following: {following}</span>\n            </a>\n          }\n\n          {publicRepos && (\n            <span className=\"public_repos\">\n              <RiGitRepositoryLine />\n              Repositories {publicRepos}\n            </span>\n          )}\n          {updatedAt && <span className=\"updated_at\">Updated: {getDayMonth(updatedAt)}</span>}\n          {createdAt && <span className=\"created_at\">Created: {getDayMonth(createdAt)}</span>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isFetching: state.fetch.isFetching,\n  profile: state ? state.profile.profile : {},\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setProfile: (value) => dispatch(setProfile(value)),\n  setFetchStatus: (flag) => dispatch(setFetchStatus(flag)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","export const SET_PROFILE = 'SET_PROFILE';\n\n/**\n * SetProfile: Action that sets user profile.\n *\n * @param {Object} value JSON Object containing profile data.\n */\nexport function setProfile(value) {\n  return {\n    type: SET_PROFILE,\n    payload: { profile: value },\n  };\n}\n","import React from 'react';\n\nimport { GoRepoForked, GoStar } from 'react-icons/go';\nimport Highlight from 'react-highlighter';\nimport { getDayMonth } from '../../utils/index';\nimport { MAP_LANGUAGES_TO_COLOR } from '../../constants/constants';\n\nimport './style.css';\n\nconst RepoItem = ({ repo, searchText }) => {\n  // console.log(Highlight);\n  const {\n    name,\n    language,\n    description,\n    html_url: htmlUrl,\n    created_at: createdAt,\n    updated_at: updatedAt,\n    forks_count: forksCount,\n    stargazers_count: starGazersCount,\n  } = repo;\n\n  return (\n    <div className=\"RepoItem\">\n      <a href={htmlUrl} title={name} target=\"_blank\" rel=\"noopener noreferrer\">\n        <h3 className=\"title\">\n          <Highlight search={searchText}>{name}</Highlight>\n        </h3>\n      </a>\n      <p className=\"desc\">{description}</p>\n      <div className=\"meta\">\n        <div className=\"language\">\n          <span className=\"indicator\" style={{ background: MAP_LANGUAGES_TO_COLOR[language] }}></span>\n          <span>{language}</span>\n        </div>\n        <span className=\"forks-count\">\n          <GoRepoForked />\n          {forksCount}\n        </span>\n        <span className=\"stargazers_count\">\n          <GoStar />\n          {starGazersCount}\n        </span>\n      </div>\n      <div className=\"dates\">\n        <span className=\"created-at\">Created on {getDayMonth(createdAt)}</span>\n        <span className=\"updated-at\">Updated on {getDayMonth(updatedAt)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoItem;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport RepoItem from '../RepoItem';\nimport Loader from '../common/Loader';\nimport { isArrayEmpty } from '../../utils';\nimport * as constant from '../../constants/constants';\n\nimport { setRepoList } from '../../actions/reposActions';\nimport { setFetchStatus } from '../../actions/fetchActions';\n\nimport * as API from '../../Services/API';\n\nimport './style.css';\n\nconst RepoList = ({ repoList, isFetching, setRepoList, setFetchStatus }) => {\n  const [search, setSearch] = useState('');\n  const [language, setLanguage] = useState('');\n  const [sortBy, setSortBy] = useState('updated');\n  const [filteredRepoList, setFilteredRepoList] = useState([]);\n\n  const getRepoList = async () => {\n    setFetchStatus(true);\n    const response = await API.fetchUrl(constant.API_REPO_URL).then((response) => response);\n\n    return response;\n  };\n\n  useEffect(() => {\n    if (isArrayEmpty(repoList)) {\n      getRepoList().then((response) => {\n        if (response) {\n          setRepoList(response.data);\n          setFetchStatus(false);\n        }\n      });\n    }\n  }, [repoList, setRepoList]);\n\n  useEffect(() => {\n    setFilteredRepoList(\n      repoList.filter((repo) => {\n        return (\n          repo.name.toLowerCase().includes(search.toLowerCase()) &&\n          (language === '' ||\n            language === 'All' ||\n            (repo.language && repo.language.toLowerCase() === language.toLowerCase()))\n        );\n      }),\n    );\n  }, [repoList, search, language]);\n\n  const languageSelector = () => {\n    return (\n      <select\n        className=\"language-selector\"\n        name=\"langauges\"\n        id=\"languages\"\n        onChange={(e) => setLanguage(e.target[e.target.selectedIndex].text)}\n      >\n        {constant.LANGUAGES.map((language, index) => (\n          <option key={index} style={{ background: constant.MAP_LANGUAGES_TO_COLOR[language] }}>\n            {language}\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  return (\n    <div className=\"RepoList\">\n      <input\n        className=\"search-input\"\n        type=\"text\"\n        placeholder=\"Find a repository\"\n        onChange={(e) => setSearch(e.target.value)}\n      />\n\n      {languageSelector()}\n\n      {isFetching ? (\n        <Loader />\n      ) : (\n        !isArrayEmpty(repoList) && (\n          <ul className=\"RepoItemList\">\n            {filteredRepoList.map((repo) => (\n              <RepoItem key={repo.id} repo={repo} searchText={search} />\n            ))}\n          </ul>\n        )\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  repoList: state ? state.repo.repoList : [],\n  isFetching: state.fetch.isFetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setRepoList: (value) => dispatch(setRepoList(value)),\n  setFetchStatus: (flag) => dispatch(setFetchStatus(flag)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RepoList);\n","export const SET_REPO_LIST = 'SET_REPO_LIST';\n\n/**\n * SetRepoLost: Action that sets Repo List.\n *\n * @param {List} value List  containing repos data.\n */\nexport const setRepoList = (value) => ({\n  type: SET_REPO_LIST,\n  payload: { repoList: value },\n});\n","import React, { useState, useEffect } from 'react';\n\nimport Loader from '../common/Loader';\n\nimport { GrLocation } from 'react-icons/gr';\nimport { BsBriefcase } from 'react-icons/bs';\n\nimport * as API from '../../Services/API';\n\nimport './style.css';\nimport { isObjectEmpty } from '../../utils';\n\nconst UserItem = ({ url }) => {\n  const [user, setUser] = useState({});\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getUserInfo().then((response) => {\n      if (response) {\n        setUser(response.data);\n        setLoading(false);\n      }\n    });\n  }, []);\n\n  const getUserInfo = async () => {\n    setLoading(true);\n    const response = await API.fetchUrl(url).then((response) => response);\n\n    return response;\n  };\n\n  const displayLoading = () => {\n    return <Loader height=\"60px\" />;\n  };\n\n  const displayUserInfo = () => {\n    const { bio, name, login, company, location, avatar_url: avatarUrl } = user;\n\n    return (\n      <>\n        <div className=\"avatar\">\n          <img src={avatarUrl} alt={`${name} Avatar`} className=\"avatar__img\" />\n        </div>\n        <div className=\"info\">\n          <div className=\"intro\">\n            <span className=\"name\"> {name}</span>\n            <span className=\"username\"> {login}</span>\n          </div>\n\n          {bio && (\n            <div className=\"bio\">\n              <p>{bio}</p>\n            </div>\n          )}\n\n          <div className=\"work-location\">\n            {company && (\n              <div className=\"work\">\n                <span className=\"work__icon\">\n                  <BsBriefcase />\n                </span>\n                <span>{company} </span>\n              </div>\n            )}\n\n            {location && (\n              <div className=\"location\">\n                <span className=\"location__icon\">\n                  <GrLocation />\n                </span>\n                <span>{location}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return <div className=\"UserItem\">{isLoading || isObjectEmpty(user) ? displayLoading() : displayUserInfo()}</div>;\n};\n\nexport default UserItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setFetchStatus } from '../../actions/fetchActions/index';\n\nimport Loader from '../common/Loader';\nimport * as API from '../../Services/API';\nimport * as constant from '../../constants/constants';\nimport { setFollowersList, setFollowingList } from '../../actions/usersActions';\nimport { isArrayEmpty } from '../../utils';\nimport UserItem from '../UserItem';\n\nconst UsersList = (props) => {\n  const {\n    isFetching,\n    followersList,\n    followingList,\n    setFetchStatus,\n    setFollowersList,\n    setFollowingList,\n    selectedComponent,\n  } = props;\n\n  let URL = constant.API_FOLLOWING_URL;\n  let setList = setFollowingList;\n  let list = followingList;\n\n  if (selectedComponent === 'follower') {\n    URL = constant.API_FOLLOWER_URL;\n    setList = setFollowersList;\n    list = followersList;\n  }\n\n  const getUsersList = async () => {\n    setFetchStatus(true);\n    const response = await API.fetchUrl(URL).then((response) => response);\n\n    return response;\n  };\n\n  useEffect(() => {\n    if (isArrayEmpty(list)) {\n      getUsersList().then((response) => {\n        if (response) {\n          setList(response.data);\n          setFetchStatus(false);\n        }\n      });\n    }\n  }, []);\n\n  const showFollower = () => {\n    return (\n      <ul>\n        {followersList.map((user) => (\n          <UserItem key={user.id} url={user.url} />\n        ))}\n      </ul>\n    );\n  };\n\n  const showFollowing = () => {\n    return (\n      <ul>\n        {followingList.map((user) => (\n          <UserItem key={user.id} url={user.url} />\n        ))}\n      </ul>\n    );\n  };\n\n  if (isFetching) {\n    return <Loader />;\n  }\n\n  return <div className=\"UsersList\">{selectedComponent === 'follower' ? showFollower() : showFollowing()}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n  isFetching: state.fetch.isFetching,\n  followersList: state ? state.users.followersList : [],\n  followingList: state ? state.users.followingList : [],\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFetchStatus: (flag) => dispatch(setFetchStatus(flag)),\n  setFollowersList: (value) => dispatch(setFollowersList(value)),\n  setFollowingList: (value) => dispatch(setFollowingList(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n","export const SET_FOLLOWERS_LIST = 'SET_FOLLOWERS_LIST';\nexport const SET_FOLLOWING_LIST = 'SET_FOLLOWING_LIST';\n\n/**\n * SET_FOLLOWERS_LIST: Action that sets Followers List.\n *\n * @param {List} value List  containing set Users data.\n */\nexport const setFollowersList = (value) => ({\n  type: SET_FOLLOWERS_LIST,\n  payload: { followersList: value },\n});\n\n/**\n * SET_FOLLOWING_LIST: Action that sets FOllowings List.\n *\n * @param {List} value List  containing set Users data.\n */\nexport const setFollowingList = (value) => ({\n  type: SET_FOLLOWING_LIST,\n  payload: { followingList: value },\n});\n","import React from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\nimport { RiGitRepositoryLine } from 'react-icons/ri';\nimport { BsPeople, BsStar, BsPerson } from 'react-icons/bs';\n\nimport Profile from '../Profile';\nimport RepoList from '../RepoList';\n\n// Import Default Tabs STyle\nimport 'react-tabs/style/react-tabs.css';\n\n// Override Default Tabs Style\nimport './style.css';\nimport UsersList from '../UsersList';\n\nconst TabNav = ({ className }) => (\n  <div className={className}>\n    <Tabs>\n      <TabList>\n        <Tab>\n          <div className=\"tab__logo\">\n            <BsPerson />\n          </div>\n\n          <span className=\"tab__name\">Profile</span>\n        </Tab>\n\n        <Tab>\n          <div className=\"tab__logo\">\n            <RiGitRepositoryLine />\n          </div>\n          <span className=\"tab__name\">Repositories</span>\n        </Tab>\n\n        <Tab>\n          <div className=\"tab__logo\">\n            <BsPeople />\n          </div>\n          <span className=\"tab__name\">Followers</span>\n        </Tab>\n\n        <Tab>\n          <div className=\"tab__logo\">\n            <RiGitRepositoryLine />\n          </div>\n          <span className=\"tab__name\">Following</span>\n        </Tab>\n\n        <Tab>\n          <div className=\"tab__logo\">\n            <BsStar />\n          </div>\n          <span className=\"tab__name\">Stars</span>\n        </Tab>\n      </TabList>\n\n      <TabPanel>\n        <Profile />\n      </TabPanel>\n\n      <TabPanel>\n        <RepoList />\n      </TabPanel>\n\n      <TabPanel>\n        <UsersList selectedComponent=\"follower\" />\n      </TabPanel>\n\n      <TabPanel>\n        <UsersList />\n      </TabPanel>\n\n      <TabPanel>\n        <h2>Stars</h2>\n      </TabPanel>\n    </Tabs>\n  </div>\n);\n\nexport default TabNav;\n","import React from 'react';\n\n// Layout Components\nimport Main from './shared/Main';\nimport Header from './shared/Header';\nimport Footer from './shared/Footer';\n\nimport './App.css';\nimport TabNav from './Components/Tab';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Main>\n      <TabNav className=\"container\" />\n    </Main>\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import { SET_REPO_LIST } from '../../actions/reposActions';\n\nconst INITIAL_STATE = {\n  repoList: [],\n};\n\nconst repoReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_REPO_LIST:\n      return { ...state, repoList: action.payload.repoList };\n    default:\n      return state;\n  }\n};\n\nexport default repoReducer;\n","import { SET_FETCH_STATUS } from '../../actions/fetchActions';\n\nconst INITIAL_STATE = {\n  isFetching: false,\n};\n\nconst fetchReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_FETCH_STATUS:\n      return { ...state, isFetching: action.payload.flag };\n\n    default:\n      return state;\n  }\n};\n\nexport default fetchReducer;\n","import { SET_FOLLOWERS_LIST, SET_FOLLOWING_LIST } from '../../actions/usersActions';\n\nconst INITIAL_STATE = {\n  followersList: [],\n  followingList: [],\n};\n\nconst usersReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_FOLLOWERS_LIST:\n      return { ...state, followersList: action.payload.followersList };\n    case SET_FOLLOWING_LIST:\n      return { ...state, followingList: action.payload.followingList };\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\n","import { SET_PROFILE } from '../../actions/profileActions';\n\nconst INITIAL_STATE = {\n  profile: {},\n};\n\nconst profileReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_PROFILE:\n      return { ...state, profile: action.payload.profile };\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\n","import { combineReducers } from 'redux';\n\nimport repoReducer from './repos';\nimport fetchReducer from './fetch';\nimport usersReducer from './users';\nimport profileReducer from './profile';\n\nconst reducer = combineReducers({\n  repo: repoReducer,\n  fetch: fetchReducer,\n  users: usersReducer,\n  profile: profileReducer,\n});\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\n// Styles\nimport './index.css';\nimport './styles/reset.css';\nimport './styles/layout.css';\nimport './styles/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}